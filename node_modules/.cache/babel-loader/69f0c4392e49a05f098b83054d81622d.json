{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-04-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx\";\nimport styles from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackOptions(_ref) {\n  let {\n    options,\n    onLeaveFeedback\n  } = _ref;\n  const button = options.map(button => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      typr: \"button\",\n      value: button,\n      onClick: () => onLeaveFeedback(button),\n      children: button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, button, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.listButton,\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FeedbackOptions;\nFeedbackOptions.prototype = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\nexport default FeedbackOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-04-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx"],"names":["styles","PropTypes","FeedbackOptions","options","onLeaveFeedback","button","map","listButton","prototype","arrayOf","string","isRequired","func"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,eAAT,OAAuD;AAAA,MAA9B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA8B;AACrD,QAAMC,MAAM,GAAGF,OAAO,CAACG,GAAR,CAAYD,MAAM,iBAC/B;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAEL,MAAM,CAACK,MAA1B;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,KAAK,EAAEA,MAAxD;AAAgE,MAAA,OAAO,EAAE,MAAMD,eAAe,CAACC,MAAD,CAA9F;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,KAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAOA,sBACE;AAAI,IAAA,SAAS,EAAGL,MAAM,CAACO,UAAvB;AAAA,cACSF;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAdQH,e;AAgBTA,eAAe,CAACM,SAAhB,GAA4B;AACxBL,EAAAA,OAAO,EAAEF,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACS,MAA5B,EAAoCC,UADrB;AAExBP,EAAAA,eAAe,EAAEH,SAAS,CAACW,IAAV,CAAeD;AAFR,CAA5B;AAKA,eAAeT,eAAf","sourcesContent":["import styles from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\"\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  const button = options.map(button => (\n    <li  key={button}>\n      <button className={styles.button } typr=\"button\" value={button} onClick={() => onLeaveFeedback(button)}  >\n        {button}\n      </button>\n    </li>\n  ))\n  return (\n    <ul className= {styles.listButton}>\n            {button}\n          </ul> \n\n    )\n}\n\nFeedbackOptions.prototype = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired\n}\n\nexport default FeedbackOptions;"]},"metadata":{},"sourceType":"module"}